<?xml version="1.0" encoding="UTF-8"?>

<!--
  ~ Copyright 2014-2015 Hewlett-Packard Development Company, L.P.
  ~ Licensed under the MIT License (the "License"); you may not use this file except in compliance with the License.
  -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
                         http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
                         http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.0.xsd
                         http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

    <!-- Scans the classpath of this application for @Components to deploy as beans -->
    <context:component-scan base-package="com.hp.autonomy.frontend">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        <context:exclude-filter type="annotation" expression="org.springframework.web.bind.annotation.RestController"/>
    </context:component-scan>

    <context:property-placeholder location="classpath:com/hp/autonomy/frontend/find/find.properties"/>

    <util:constant id="ssoPage" static-field="com.hp.autonomy.frontend.find.FindController.SSO_PAGE"/>
    <util:constant id="ssoLogoutPage" static-field="com.hp.autonomy.frontend.find.FindController.SSO_LOGOUT_PAGE"/>
    <util:constant id="ssoAuthenticationUri" static-field="com.hp.autonomy.frontend.find.FindController.SSO_AUTHENTICATION_URI"/>

    <util:properties id="dispatcherProperties" location="classpath:com/hp/autonomy/frontend/find/dispatcher.properties"/>

    <bean id="forbiddenEntryPoint" class="org.springframework.security.web.authentication.Http403ForbiddenEntryPoint"/>

    <bean id="ssoEntryPoint" class="com.hp.autonomy.hod.sso.SsoAuthenticationEntryPoint">
        <constructor-arg ref="ssoPage"/>
    </bean>

    <bean id="ssoAuthenticationFilter" class="com.hp.autonomy.hod.sso.SsoAuthenticationFilter">
        <constructor-arg ref="ssoAuthenticationUri"/>
        <property name="authenticationManager" ref="authenticationManager"/>
    </bean>

    <security:http pattern="/static-*/**" security="none"/>

    <security:http pattern="/api/public/**" entry-point-ref="forbiddenEntryPoint">
        <security:intercept-url pattern="/api/public/**" access="hasRole('PUBLIC')"/>
        <security:csrf disabled="true"/>
        <security:headers defaults-disabled="true">
            <security:frame-options policy="SAMEORIGIN"/>
        </security:headers>
    </security:http>

    <security:http pattern="/api/useradmin/**" entry-point-ref="forbiddenEntryPoint">
        <security:intercept-url pattern="/api/useradmin/**" access="hasRole('ADMIN')"/>
        <security:csrf disabled="true"/>
    </security:http>

    <security:http pattern="/api/config/**" entry-point-ref="forbiddenEntryPoint">
        <security:intercept-url pattern="/api/config/**" access="hasRole('DEFAULT')"/>
        <security:csrf disabled="true"/>
    </security:http>

    <bean id="defaultLoginAuthenticationProvider" class="com.hp.autonomy.frontend.configuration.authentication.DefaultLoginAuthenticationProvider">
        <constructor-arg ref="configService"/>
        <constructor-arg value="ROLE_DEFAULT"/>
    </bean>

    <bean id="singleUserAuthenticationProvider" class="com.hp.autonomy.frontend.configuration.authentication.SingleUserAuthenticationProvider">
        <constructor-arg ref="configService"/>
        <constructor-arg value="ROLE_ADMIN"/>
    </bean>

    <bean id="hodAuthenticationProvider" class="com.hp.autonomy.hod.sso.HodAuthenticationProvider">
        <constructor-arg ref="tokenRepository"/>
        <constructor-arg value="ROLE_PUBLIC"/>
        <constructor-arg ref="authenticationService"/>
    </bean>

    <bean id="loginSuccessHandler" class="com.hp.autonomy.frontend.configuration.authentication.LoginSuccessHandler">
        <constructor-arg value="ROLE_DEFAULT"/>
        <constructor-arg value="/config/"/>
        <constructor-arg value="/p/"/>
    </bean>

    <bean id="adminAccessDeniedHandler" class="com.hp.autonomy.frontend.configuration.authentication.FindAccessDeniedHandler">
        <constructor-arg value="loginPage"/>
    </bean>

    <bean id="hodTokenLogoutSuccessHandler" class="com.hp.autonomy.hod.sso.HodTokenLogoutSuccessHandler">
        <constructor-arg ref="ssoLogoutPage"/>
        <constructor-arg ref="tokenRepository"/>
    </bean>

    <!-- TODO reenable this once we have a better plan for the settings page (remove entry point and uncomment login page)-->
    <security:http pattern="/p/.*|/config/.*|/authenticate|/logout" request-matcher="regex" entry-point-ref="forbiddenEntryPoint">
        <security:access-denied-handler ref="adminAccessDeniedHandler"/>
        <security:intercept-url pattern="/p/.*" access="hasRole('ADMIN')"/>
        <security:intercept-url pattern="/config/.*" access="hasRole('DEFAULT')"/>
        <!--<security:form-login-->
                <!--authentication-failure-url="/loginPage?error=auth"-->
                <!--authentication-success-handler-ref="loginSuccessHandler"-->
                <!--login-processing-url="/authenticate"-->
                <!--login-page="/loginPage"-->
                <!--/>-->
        <security:logout logout-url="/logout" success-handler-ref="hodTokenLogoutSuccessHandler"/>
        <security:csrf disabled="true"/>
    </security:http>

    <security:http pattern="/public/.*|/sso|/authenticate-sso|/api/authentication/.*" request-matcher="regex" entry-point-ref="ssoEntryPoint">
        <security:access-denied-handler error-page="/authentication-error"/>
        <security:intercept-url pattern="/public/.*" access="hasRole('PUBLIC')"/>
        <security:custom-filter ref="ssoAuthenticationFilter" after="PRE_AUTH_FILTER"/>
        <security:csrf disabled="true"/>
    </security:http>

    <!-- TODO uncomment authentication providers when re-enabling settings page-->
    <security:authentication-manager alias="authenticationManager">
        <!--<security:authentication-provider ref="defaultLoginAuthenticationProvider"/>-->
        <!--<security:authentication-provider ref="singleUserAuthenticationProvider"/>-->
        <security:authentication-provider ref="hodAuthenticationProvider"/>
    </security:authentication-manager>

    <bean class="com.hp.autonomy.frontend.logging.ApplicationStartLogger"/>

    <bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver">
        <property name="defaultLocale" value="en" />
    </bean>

    <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="basename" value="com.hp.autonomy.frontend.find.i18n"/>
    </bean>

    <bean id="propertiesLookup" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <qualifier value="application"/>
        <property name="singleton" value="true"/>
        <property name="location" value="classpath:com/hp/autonomy/frontend/find/find.properties"/>
    </bean>

    <bean name="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
        <property name="converters">
            <set>
                <bean class="com.hp.autonomy.frontend.find.converter.StringToResourceIdentifierConverter"/>
            </set>
        </property>
        <property name="formatters">
            <set>
                <bean class="org.springframework.format.datetime.joda.JodaDateTimeFormatAnnotationFormatterFactory"/>
            </set>
        </property>
    </bean>

    <bean class="com.hp.autonomy.frontend.configuration.filter.ConfigEnvironmentVariableFilter" name="configEnvironmentVariableFilter"
          p:configPage="/configError"
          p:configService-ref="configService"/>

</beans>
