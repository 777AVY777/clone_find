<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2014-2015 Hewlett-Packard Development Company, L.P.
  ~ Licensed under the MIT License (the "License"); you may not use this file except in compliance with the License.
  -->

<web-app xmlns="http://java.sun.com/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
         version="3.0">

    <description>Find</description>
    <display-name>Find</display-name>

    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>

    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>com.hp.autonomy.frontend.find.beanconfiguration.AppConfiguration</param-value>
    </context-param>
    
    <context-param>
        <param-name>contextClass</param-name>
        <param-value>org.springframework.web.context.support.AnnotationConfigWebApplicationContext</param-value>
    </context-param>
    
    <servlet>
        <servlet-name>dispatcher</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextClass</param-name>
            <param-value>org.springframework.web.context.support.AnnotationConfigWebApplicationContext</param-value>
        </init-param>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>com.hp.autonomy.frontend.find.beanconfiguration.DispatcherServletConfiguration</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>

    <servlet-mapping>
        <servlet-name>dispatcher</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>

    <!--
        This is needed to force Tomcat to interpret POST bodies as UTF-8 by default, otherwise it'll use ISO-8859-1,
        since that's apparently what the servlet spec specifies,
        It's required despite URIEncoding="UTF-8" on the connector since that only works on GET parameters.
        Jetty doesn't have this problem, it seems to use UTF-8 as the default.
     -->
    <filter>
        <filter-name>characterEncodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
    </filter>

    <filter-mapping>
        <filter-name>characterEncodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <filter>
        <filter-name>springSessionRepositoryFilter</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
        <async-supported>true</async-supported>
    </filter>

    <!-- We can't do excludes here, because servlets are stupid -->
    <filter-mapping>
        <filter-name>springSessionRepositoryFilter</filter-name>
        <url-pattern>/p/*</url-pattern>
        <url-pattern>/api/*</url-pattern>
        <url-pattern>/config/*</url-pattern>
        <url-pattern>/authentication/*</url-pattern>
        <url-pattern>/public/*</url-pattern>
        <url-pattern>/login</url-pattern>
        <url-pattern>/authenticate</url-pattern>
        <url-pattern>/authenticate-sso</url-pattern>
        <url-pattern>/logout</url-pattern>
        <url-pattern>/sso</url-pattern>
    </filter-mapping>

    <!-- Clears session when accessing the login page -->
    <filter>
        <filter-name>configEnvironmentVariableFilter</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    </filter>

    <filter-mapping>
        <filter-name>configEnvironmentVariableFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <filter>
        <filter-name>springSecurityFilterChain</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    </filter>

    <filter-mapping>
        <filter-name>springSecurityFilterChain</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <filter>
        <filter-name>userLoggingFilter</filter-name>
        <filter-class>com.hp.autonomy.frontend.logging.UserLoggingFilter</filter-class>
        <init-param>
            <param-name>usePrincipal</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>

    <filter-mapping>
        <filter-name>userLoggingFilter</filter-name>
        <url-pattern>/api/*</url-pattern>
    </filter-mapping>


    <session-config>
        <session-timeout>60</session-timeout>
    </session-config>


    <error-page>
        <error-code>403</error-code>
        <location>/authentication-error</location>
    </error-page>

    <error-page>
        <error-code>401</error-code>
        <location>/authentication-error</location>
    </error-page>

    <error-page>
        <error-code>500</error-code>
        <location>/server-error</location>
    </error-page>

    <error-page>
        <error-code>404</error-code>
        <location>/not-found-error</location>
    </error-page>
</web-app>
